@model DomainProduct.Entities.Reference

@{
    DomainProduct.Entities.Sku SKUPadrao = (DomainProduct.Entities.Sku)TempData["SKUPadraoVariacao"];
    List<DomainProduct.Entities.Sku> ListSKUPadraoVariacao = null;
    List<DomainProduct.Entities.Sku> ListaSku = (List<DomainProduct.Entities.Sku>)TempData["ListaSKU"];
    List<DomainProduct.Entities.Variation> VariacoesSelecionadas = ViewBag.VariacoesSelecionadas;
    int ordem = Convert.ToInt32(TempData["Order"]);
    int totalReferencias = TempData["TotalReferencias"] != null ? Convert.ToInt32(TempData["TotalReferencias"]) : 0;
    ordem = ordem + 1;
    TempData["Order"] = ordem;
    if (SKUPadrao == null)
    {
        SKUPadrao = new DomainProduct.Entities.Sku();
        SKUPadrao.Variations = new List<DomainProduct.Entities.Variation>();
    }

    if(Session["ListSKUPadraoVariacao"] != null)
    {
        ListSKUPadraoVariacao = (List<DomainProduct.Entities.Sku>)Session["ListSKUPadraoVariacao"];
    }
}

<div class="ui form">
    <div class="grouped fields">
        <div class="field variacao-cor" id="@Model.IdReference" data-id-reference="@Model.IdReference" data-tipo="color" data-order="@ordem">
            @foreach (var variacoes in Model.Variations)
            {
                //SE SKU PADRÂO = NULL APENAS EXIBE AS VARIAÇÔES (COMPRE JUNTO)
                if (SKUPadrao == null)
                {
                    <button class="ui basic button radio variacao cor " style="background-color: @variacoes.Color !important;" data-tooltip="@variacoes.Name" value="@Model.IdReference-@variacoes.IdVariation" data-id-reference="@Model.IdReference" data-tipo="color" data-order="@ordem"></button>
                    <div class="ui checkbox hideme">
                        <input type="radio" name="radio" value="@variacoes.Color">
                        <label></label>
                    </div>
                }
                else
                {

                    if (VariacoesSelecionadas != null || totalReferencias == 1)
                    {
                        //BUSCA SKUS DISPONÍVEIS PARA VARIACAO SELECIONADA
                        List<DomainProduct.Entities.Sku> ListaSkusDisponiveis = new List<DomainProduct.Entities.Sku>();

                        if (totalReferencias == 1)
                        {
                            if(ListSKUPadraoVariacao != null) {
                                ListaSkusDisponiveis = ListSKUPadraoVariacao;
                            }
                            else
                            {
                                ListaSkusDisponiveis = ListaSku;
                            }
                        }
                        else
                        {
                            foreach (var skuL in ListaSku)
                            {
                                int flag = 0;
                                foreach (var variacaoLSku in skuL.Variations)
                                {
                                    foreach (var vSelecionadas in VariacoesSelecionadas)
                                    {
                                        if (variacaoLSku.IdVariation == vSelecionadas.IdVariation)
                                        {
                                            flag++;
                                        }
                                    }
                                }
                                if (flag == VariacoesSelecionadas.Count())
                                {
                                    ListaSkusDisponiveis.Add(skuL);
                                }
                            }
                        }

                        //PROCURA O SKU DA VARIACAO CORRENTE PARA VALIDAR ESTOQUE E VISIVEL
                        DomainProduct.Entities.Sku skuvariacao = new DomainProduct.Entities.Sku();
                        List<DomainProduct.Entities.Sku> skuTodasVariacoes = new List<DomainProduct.Entities.Sku>();
                        foreach (var variacoesSkuDisponivel in ListaSkusDisponiveis)
                        {
                            foreach (var skuVariacao in variacoesSkuDisponivel.Variations)
                            {
                                if (skuVariacao.IdVariation == variacoes.IdVariation)
                                {
                                    skuTodasVariacoes.Add(variacoesSkuDisponivel);
                                }
                            }
                        }


                        //APLICA REGRA SE APENAS 1 VARIAÇÃO ESTIVER SELECIONADA
                        if (skuTodasVariacoes.Count > 0 && (skuTodasVariacoes.FindAll(s => s.Visible == true).Count() > 0) || skuTodasVariacoes.FindAll(s => s.Stock > 0).Count() > 0)
                        {
                            skuvariacao = skuTodasVariacoes.Find(s => s.Visible == true && s.Stock > 0);


                            if (skuvariacao == null)
                            {
                                skuvariacao = skuTodasVariacoes.Find(s => s.Visible == true);
                            }

                            if (skuvariacao == null)
                            {
                                skuvariacao = skuTodasVariacoes.Find(s => s.Stock > 0);
                            }
                        }
                        else
                        {
                            skuvariacao = new DomainProduct.Entities.Sku();
                        }


                        //MONTA CLASSE DO ELEMENTO
                        string classeBtn = "ui basic button radio variacao cor";
                        if (skuvariacao.Stock <= 0 || !skuvariacao.Visible)
                        {
                            if (skuvariacao.Stock <= 0)
                            {
                                classeBtn += " desabilitado";
                            }
                            else if (!skuvariacao.Visible)
                            {
                                classeBtn += " hideme";
                            }
                        }

                        if (SKUPadrao.Variations.FindAll(v => v.IdVariation == variacoes.IdVariation).Count > 0)
                        {
                            classeBtn += " selecionado";
                        }

                        bool showVariation = true;
                        if (!LojaCorp.Control.Company._Company.ShowProductOutOfStock)
                        {
                            if (skuTodasVariacoes.Count <= 0) { showVariation = false; }
                        }
                        if (showVariation)
                        {
                            <button class="@classeBtn" style="background-color: @variacoes.Color !important;" data-tooltip="@variacoes.Name" value="@Model.IdReference-@variacoes.IdVariation" data-id-reference="@Model.IdReference" data-tipo="color" data-order="@ordem"></button>
                            <div class="ui checkbox hideme">
                                <input type="radio" name="radio" value="@variacoes.Color">
                                <label></label>
                            </div>
                        }
                    }
                    else
                    {
                        //CARREGA TODAS VARIAÇÕES DA REFERENCIA
                        if (SKUPadrao.Variations.FindAll(v => v.IdVariation == variacoes.IdVariation).Count > 0)
                        {
                            <button class="ui basic button radio variacao cor selecionado" style="background-color: @variacoes.Color !important;" data-tooltip="@variacoes.Name" value="@Model.IdReference-@variacoes.IdVariation" data-id-reference="@Model.IdReference" data-tipo="color" data-order="@ordem"></button>
                        }
                        else
                        {
                            <button class="ui basic button radio variacao cor " style="background-color: @variacoes.Color !important;" data-tooltip="@variacoes.Name" value="@Model.IdReference-@variacoes.IdVariation" data-id-reference="@Model.IdReference" data-tipo="color" data-order="@ordem"></button>
                        }
                        <div class="ui checkbox hideme">
                            <input type="radio" name="radio" value="@variacoes.Color">
                            <label></label>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>