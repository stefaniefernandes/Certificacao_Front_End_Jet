@using DomainCheckout.Entities
@model DomainCheckout.Entities.CartItem

<div class="item @(Model.Stock == 0 || Model.Stock < Model.Quantity || Model.FlagExhausted == EnumeratorsCommons.EnumYesNo.Yes ? "exhausted" : "")" data-signature="@Model.IsRecurrent" data-id-cart="@Model.IdCartItem" data-id-produto="@Model.IdProduct" id="itemCartProduct_@Model.IdCartItem">
    <div class="ui image small">
        <img src="@Model.ProductImage.ImageDefault"  onerror="imgError(this)">
    </div>
    <div class="content">
        <div class="nameProduct">
            <a class="product title">@Html.Raw(Model.NameProduct)</a>
        </div>
        <div class="meta">
            @Model.IdProduct
        </div>
        @if (Model.IsKit)
        {
            <div>
                @foreach (var productKit in Model.ProductsKit)
                {
                    <div class="description">@(string.Concat(string.Format("{0:n0}", productKit.Quantity), " x ", productKit.Name))</div>
                }
            </div>
        }

        <div class="description">
            @if (Model.Stock == 0 || Model.Stock < Model.Quantity || Model.FlagExhausted == EnumeratorsCommons.EnumYesNo.Yes)
            {
                <table class="ui very basic unstackable table margin top medium exhausted">
                    <thead>
                    <tr>
                        <th><span class="ui label basic primary">PRODUTO ESGOTADO</span></th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>
                            <button class="removeCartItem" data-id="@Model.IdCartItem">
                                <i class="trash alternate outline icon"></i>
                            </button>
                        </td>
                    </tr>
                    </tbody>
                </table>
            }
            else
            {
                <table class="ui very basic unstackable table ">
                    <thead>
                    <tr>
                        <th>Qtd</th>
                        <th>Valor</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td data-idCartItem="@Model.IdCartItem">
                            <div class="ui qtd action mini input">
                                <button class="ui icon button qtdAction" data-id="@Model.IdCartItem" data-action="minus">
                                    <i class="minus icon"></i>
                                </button>
                                <input type="hidden" id="qtdInicial_@Model.IdCartItem" value="@Model.Quantity"/>
                                <input type="hidden" value="@Model.Stock" name="stock_@Model.IdCartItem" id="stock_@Model.IdCartItem"/>
                                <input type="number" class="text center" min="0" step="1" size="3" value="@Model.Quantity" name="@Model.IdCartItem" id="qtd_@Model.IdCartItem" data-id="@Model.IdCartItem" data-action="ipt"/>
                                <button class="ui icon button qtdAction" data-id="@Model.IdCartItem" data-action="plus">
                                    <i class="add icon"></i>
                                </button>
                            </div>
                        </td>
                        <td id="preco_unitario_@Model.IdCartItem" data-qtd="@Model.Quantity">@(Model.Quantity > 1 ? Model.Quantity + "x" : "") @string.Format("{0:c}", Model.PriceProduct)</td>
                        <td>
                            <button class="removeCartItem" data-id="@Model.IdCartItem">
                                <i class="trash alternate outline icon"></i>
                            </button>
                        </td>
                    </tr>
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>