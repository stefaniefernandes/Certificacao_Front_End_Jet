@model List<DomainCheckout.Entities.Shipping>

@{ 
    int IdShippingModeCart = Convert.ToInt32(TempData["IdShippingModeCart"]);

    string _disabled = "";
    if (Session["PaymentLinkChangeBrand"] != null && (bool)Session["PaymentLinkChangeBrand"] == true)
    {
        _disabled = "disable_column";
        int _idShippingHub = 0;
        int.TryParse(Session["PaymentLinkIdShippingHub"].ToString(), out _idShippingHub);
        if (Model != null && Model.Count > 0 && _idShippingHub > 2 && IdShippingModeCart > 0)
        {
            DomainCheckout.Entities.ShippingMode.Hub? _hub = null;

            switch (_idShippingHub)
            {
                case 3:
                    _hub = DomainCheckout.Entities.ShippingMode.Hub.LogControl;
                    break;
                case 4:
                    _hub = DomainCheckout.Entities.ShippingMode.Hub.Intelipost;
                    break;
                case 5:
                    _hub = DomainCheckout.Entities.ShippingMode.Hub.Frenet;
                    break;
            }
            string _carrier = Session["PaymentLinkShippingCarrier"].ToString();
            string _mode = Session["PaymentLinkShippingMode"].ToString();
            decimal _value = 0;
            decimal.TryParse(Session["PaymentLinkShippingValue"].ToString(), out _value);

            if (_hub.HasValue) {
                var _shipping = Model.Where(f => f.ShippingMode.hub == _hub && f.ShippingMode.carrier == _carrier && f.ShippingMode.mode == _mode && f.ValueShipping == _value).FirstOrDefault();
                if (_shipping != null)
                {
                    IdShippingModeCart = _shipping.ShippingMode.IdShippingMode;
                }
            }
        }
    }
}
<div class="ui three cards doubling card-checkout margin top bottom small @_disabled" id="GetShippping">
    @if (Model != null)
    {
        int _contador = 0;
        string _checkFrete = "";
        string _classCheckFrete = "";

        foreach (var item in Model)
        {
            _contador++;
            if (IdShippingModeCart == item.ShippingMode.IdShippingMode && IdShippingModeCart != 0)
            {
                _classCheckFrete = "checked";
                _checkFrete = "checked='checked'";
            }
            else
            {
                _classCheckFrete = "";
                _checkFrete = "";
            }

            <div class="card @_classCheckFrete @_disabled">
                <div class="content">
                    <div class="header">
                        <div class="ui radio checkbox @_classCheckFrete">
                            <input type="radio" 
                                   name="radio" 
                                   id="radio_@item.ShippingMode.IdShippingMode" 
                                   class="shippingGet" 
                                   value="@item.ShippingMode.IdShippingMode" 
                                   data-id="@item.ShippingMode.IdShippingMode" 
                                   data-value="@string.Format("{0}", item.ValueShipping)" 
                                   data-correios="@string.Format("{0}", item.ShippingMode.DeliveredByTheCorreiosService)" 
                                   data-entregaagendada="@item.ShippingMode.ScheduledDelivery" 
                                   data-exclusiva-entregaagendada="@item.ShippingMode.ExclusiveScheduledDelivery" 
                                   data-carrier="@item.ShippingMode.carrier" 
                                   data-mode="@item.ShippingMode.mode" 
                                   data-hub="@item.ShippingMode.hub" 
                                   data-deliverytime="@item.ShippingMode.DeliveryTime" 
                                   data-usefullday="@((item.ShippingMode.UsefulDay == true) ? "1" : "0")" @_checkFrete>
                            
                            @if (item.ShippingMode.ScheduledDelivery)
                            {
                                <label>@(item.ShippingMode.Name + " (*)") </label>
                            }
                            else if (item.ShippingMode.DeliveryTime == null)
                            {
                                <label>@item.ShippingMode.Name (Envio Imediato) </label>
                            }
                            else
                            {
                                <label>@item.ShippingMode.Name <span>(@item.ShippingMode.DeliveryTime dia(s) @string.Format("{0}", ((bool)item.ShippingMode.UsefulDay) ? ((item.ShippingMode.DeliveryTime > 0 || item.ShippingMode.DeliveryTime == 0) ? "úteis" : "útil") : ""))</span> </label>
                            }

                        </div>
                    </div>
                    <div class="meta">
                        @{
                            var _valueShipping = "";
                            if (item.ValueShipping == 0)
                            {
                                _valueShipping = "Frete Gratis";
                            }
                            else
                            {
                                _valueShipping = string.Format("{0:c}", item.ValueShipping);
                            }
                        }
                        @_valueShipping
                    </div>
                    <div class="extra content">
                        @{
                            if (item.ShippingMode.ScheduledDelivery)
                            {
                                var _deliveryDate = string.Empty;
                                var _IdScheduledDeliveryPeriod = string.Empty;
                                var _IdScheduledDelivery = string.Empty;
                                var _period = string.Empty;
                                var _startTime = string.Empty;
                                var _endTime = string.Empty;
                                if (Session["PaymentLinkDeliveryDate"] != null)
                                {
                                    _deliveryDate = Session["PaymentLinkDeliveryDate"].ToString();

                                    _IdScheduledDeliveryPeriod = Session["PaymentLinkIdScheduledDeliveryPeriod"].ToString();
                                    _IdScheduledDelivery = Session["PaymentLinkIdScheduledDelivery"].ToString();
                                    _period = Session["PaymentLinkPeriod"].ToString();
                                    _startTime = Session["PaymentLinkStartTime"].ToString();
                                    _endTime = Session["PaymentLinkEndTime"].ToString();
                                }

                                <div class="ui input input-datepicker">
                                    <input type="text" class="date agendar" id="dateAgendada_@item.ShippingMode.IdShippingMode" data-id-frete="@item.ShippingMode.IdShippingMode" value="@_deliveryDate" readonly="readonly" style="display: none;" />

                                    <select id="combo_dataperiodoagendada_@item.ShippingMode.IdShippingMode" class="field agendar select-datepicker" data-id-frete="@item.ShippingMode.IdShippingMode" style="display: none;">
                                        <option value="">Selecione</option>
                                    </select>
                                </div>
                                <input type="hidden" id="json_dataagendada_@item.ShippingMode.IdShippingMode" />

                                <input type="hidden" id="PaymentLinkIdScheduledDeliveryPeriod" value="@_IdScheduledDeliveryPeriod" />
                                <input type="hidden" id="PaymentLinkIdScheduledDelivery" value="@_IdScheduledDelivery" />
                                <input type="hidden" id="PaymentLinkPeriod" value="@_period" />
                                <input type="hidden" id="PaymentLinkStartTime" value="@_startTime" />
                                <input type="hidden" id="PaymentLinkEndTime" value="@_endTime" />
                            }
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="row margin top left bottom small">
            @Html.Raw("Nenhum Frete foi encontrado")
        </div>
        
    }
</div>
